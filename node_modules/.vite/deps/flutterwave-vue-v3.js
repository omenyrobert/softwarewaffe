import {
  init_vue_runtime_esm,
  vue_runtime_esm_default
} from "./chunk-LYFC7A4I.js";
import "./chunk-A567UAQ6.js";

// node_modules/flutterwave-vue-v3/dist/flw-ts.esm.js
init_vue_runtime_esm();
var script = vue_runtime_esm_default.extend({
  name: "FlutterwavePayButton",
  props: {
    public_key: {
      type: String
    },
    tx_ref: {
      type: [String, Number]
    },
    amount: {
      type: [String, Number],
      required: true
    },
    currency: {
      type: String,
      default: "NGN"
    },
    country: {
      type: String,
      default: "NG"
    },
    payment_options: {
      type: String
    },
    payment_plan: {
      type: [String, Number]
    },
    subaccounts: {
      type: Array
    },
    integrity_hash: {
      type: [String, Number]
    },
    redirect_url: {
      type: String
    },
    meta: {
      type: Object
    },
    authorization: {
      type: String
    },
    customer: {
      type: Object
    },
    customizations: {
      type: Object
    },
    callback: {
      type: Function
    },
    onclose: {
      type: Function
    }
  },
  methods: {
    showPaymentModal() {
      let paymentParams = {
        tx_ref: this.tx_ref,
        amount: this.amount,
        currency: this.currency,
        country: this.country,
        payment_options: this.payment_options,
        payment_plan: this.payment_plan,
        subaccounts: this.subaccounts,
        integrity_hash: this.integrity_hash,
        redirect_url: this.redirect_url,
        meta: this.meta,
        authorization: this.authorization,
        customer: this.customer,
        customizations: this.customizations,
        callback: (response) => this.callback(response),
        onclose: () => this.onclose()
      };
      if (this.public_key) {
        paymentParams.public_key = this.public_key;
      }
      this.$payWithFlutterwave(paymentParams);
    }
  }
});
function normalizeComponent(template, style, script2, scopeId, isFunctionalTemplate, moduleIdentifier, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
  if (typeof shadowMode !== "boolean") {
    createInjectorSSR = createInjector;
    createInjector = shadowMode;
    shadowMode = false;
  }
  const options = typeof script2 === "function" ? script2.options : script2;
  if (template && template.render) {
    options.render = template.render;
    options.staticRenderFns = template.staticRenderFns;
    options._compiled = true;
    if (isFunctionalTemplate) {
      options.functional = true;
    }
  }
  if (scopeId) {
    options._scopeId = scopeId;
  }
  let hook;
  if (moduleIdentifier) {
    hook = function(context) {
      context = context || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext;
      if (!context && typeof __VUE_SSR_CONTEXT__ !== "undefined") {
        context = __VUE_SSR_CONTEXT__;
      }
      if (style) {
        style.call(this, createInjectorSSR(context));
      }
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    };
    options._ssrRegister = hook;
  } else if (style) {
    hook = shadowMode ? function(context) {
      style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
    } : function(context) {
      style.call(this, createInjector(context));
    };
  }
  if (hook) {
    if (options.functional) {
      const originalRender = options.render;
      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      const existing = options.beforeCreate;
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }
  return script2;
}
var __vue_script__ = script;
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("button", {
    on: {
      "click": _vm.showPaymentModal
    }
  }, [_vm._t("default")], 2);
};
var __vue_staticRenderFns__ = [];
var __vue_inject_styles__ = void 0;
var __vue_scope_id__ = void 0;
var __vue_module_identifier__ = void 0;
var __vue_is_functional_template__ = false;
var __vue_component__ = normalizeComponent({
  render: __vue_render__,
  staticRenderFns: __vue_staticRenderFns__
}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, void 0, void 0, void 0);
var __vue_component__$1 = __vue_component__;
var components = Object.freeze({
  __proto__: null,
  FlutterwavePayButton: __vue_component__$1
});
var install = function installFlwTs(Vue, _ref) {
  let {
    publicKey = ""
  } = _ref;
  Object.entries(components).forEach((_ref2) => {
    let [componentName, component] = _ref2;
    Vue.component(componentName, component);
  });
  Vue.mixin({
    mounted() {
      const inlineSdk = "https://checkout.flutterwave.com/v3.js";
      const script2 = document.createElement("script");
      script2.src = inlineSdk;
      if (!document.querySelector(`[src="${inlineSdk}"]`)) {
        document.body.appendChild(script2);
      }
    },
    methods: {
      payWithFlutterwave(paymentParams) {
        let payData = {
          ...paymentParams,
          public_key: paymentParams.public_key || publicKey,
          callback: (response) => {
            paymentParams.callback(response);
          }
        };
        window.FlutterwaveCheckout(payData);
      },
      asyncPayWithFlutterwave(paymentData) {
        return new Promise(function(resolve) {
          let payData = {
            ...paymentData,
            public_key: paymentData.public_key || publicKey,
            callback: ($event) => {
              resolve($event);
            },
            onclose: () => resolve("closed")
          };
          window.FlutterwaveCheckout(payData);
        });
      },
      closePaymentModal() {
        let waitDuration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
        setTimeout(() => {
          document.getElementsByName("checkout")[0].setAttribute("style", "position:fixed;top:0;left:0;z-index:-1;border:none;opacity:0;pointer-events:none;width:100%;height:100%;");
          document.body.style.overflow = "";
        }, waitDuration * 1e3);
      }
    }
  });
  Vue.prototype.$payWithFlutterwave = function(paymentParams) {
    let payData = {
      ...paymentParams,
      public_key: paymentParams.public_key || publicKey,
      callback: (response) => {
        paymentParams.callback(response);
      }
    };
    window.FlutterwaveCheckout(payData);
  };
  Vue.prototype.$asyncPayWithFlutterwave = function(paymentData) {
    return new Promise(function(resolve) {
      let payData = {
        ...paymentData,
        public_key: paymentData.public_key || publicKey,
        callback: ($event) => {
          resolve($event);
        },
        onclose: () => resolve("closed")
      };
      window.FlutterwaveCheckout(payData);
    });
  };
  Vue.prototype.$closePaymentModal = function() {
    let waitDuration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
    setTimeout(() => {
      document.getElementsByName("checkout")[0].setAttribute("style", "position:fixed;top:0;left:0;z-index:-1;border:none;opacity:0;pointer-events:none;width:100%;height:100%;");
      document.body.style.overflow = "";
    }, waitDuration * 1e3);
  };
};

// dep:flutterwave-vue-v3
var flutterwave_vue_v3_default = install;
export {
  __vue_component__$1 as FlutterwavePayButton,
  flutterwave_vue_v3_default as default
};
//# sourceMappingURL=flutterwave-vue-v3.js.map
